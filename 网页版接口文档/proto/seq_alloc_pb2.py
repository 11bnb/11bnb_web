# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: seq_alloc.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import header_pb2 as header__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='seq_alloc.proto',
  package='Proto',
  syntax='proto3',
  serialized_pb=b'\n\x0fseq_alloc.proto\x12\x05Proto\x1a\x0cheader.proto\";\n\x0cGetCurSeqReq\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03uin\x18\x01 \x01(\r\"f\n\x0cGetCurSeqRsp\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03ret\x18\x01 \x01(\x05\x12\x0b\n\x03\x65rr\x18\x02 \x01(\t\x12\x0b\n\x03uin\x18\x03 \x01(\r\x12\x0f\n\x07\x63ur_seq\x18\x04 \x01(\x04\";\n\x0cGetNewSeqReq\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03uin\x18\x01 \x01(\r\"f\n\x0cGetNewSeqRsp\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03ret\x18\x01 \x01(\x05\x12\x0b\n\x03\x65rr\x18\x02 \x01(\t\x12\x0b\n\x03uin\x18\x03 \x01(\r\x12\x0f\n\x07new_seq\x18\x04 \x01(\x04\x32\x7f\n\x0bRPCSeqAlloc\x12\x37\n\tGetCurSeq\x12\x13.Proto.GetCurSeqReq\x1a\x13.Proto.GetCurSeqRsp\"\x00\x12\x37\n\tGetNewSeq\x12\x13.Proto.GetNewSeqReq\x1a\x13.Proto.GetNewSeqRsp\"\x00\x62\x06proto3'
  ,
  dependencies=[header__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_GETCURSEQREQ = _descriptor.Descriptor(
  name='GetCurSeqReq',
  full_name='Proto.GetCurSeqReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.GetCurSeqReq.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.GetCurSeqReq.uin', index=1,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=99,
)


_GETCURSEQRSP = _descriptor.Descriptor(
  name='GetCurSeqRsp',
  full_name='Proto.GetCurSeqRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.GetCurSeqRsp.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ret', full_name='Proto.GetCurSeqRsp.ret', index=1,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='Proto.GetCurSeqRsp.err', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.GetCurSeqRsp.uin', index=3,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cur_seq', full_name='Proto.GetCurSeqRsp.cur_seq', index=4,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=203,
)


_GETNEWSEQREQ = _descriptor.Descriptor(
  name='GetNewSeqReq',
  full_name='Proto.GetNewSeqReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.GetNewSeqReq.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.GetNewSeqReq.uin', index=1,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=264,
)


_GETNEWSEQRSP = _descriptor.Descriptor(
  name='GetNewSeqRsp',
  full_name='Proto.GetNewSeqRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.GetNewSeqRsp.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ret', full_name='Proto.GetNewSeqRsp.ret', index=1,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='Proto.GetNewSeqRsp.err', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.GetNewSeqRsp.uin', index=3,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_seq', full_name='Proto.GetNewSeqRsp.new_seq', index=4,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=266,
  serialized_end=368,
)

_GETCURSEQREQ.fields_by_name['header'].message_type = header__pb2._HEADER
_GETCURSEQRSP.fields_by_name['header'].message_type = header__pb2._HEADER
_GETNEWSEQREQ.fields_by_name['header'].message_type = header__pb2._HEADER
_GETNEWSEQRSP.fields_by_name['header'].message_type = header__pb2._HEADER
DESCRIPTOR.message_types_by_name['GetCurSeqReq'] = _GETCURSEQREQ
DESCRIPTOR.message_types_by_name['GetCurSeqRsp'] = _GETCURSEQRSP
DESCRIPTOR.message_types_by_name['GetNewSeqReq'] = _GETNEWSEQREQ
DESCRIPTOR.message_types_by_name['GetNewSeqRsp'] = _GETNEWSEQRSP

GetCurSeqReq = _reflection.GeneratedProtocolMessageType('GetCurSeqReq', (_message.Message,), dict(
  DESCRIPTOR = _GETCURSEQREQ,
  __module__ = 'seq_alloc_pb2'
  # @@protoc_insertion_point(class_scope:Proto.GetCurSeqReq)
  ))
_sym_db.RegisterMessage(GetCurSeqReq)

GetCurSeqRsp = _reflection.GeneratedProtocolMessageType('GetCurSeqRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETCURSEQRSP,
  __module__ = 'seq_alloc_pb2'
  # @@protoc_insertion_point(class_scope:Proto.GetCurSeqRsp)
  ))
_sym_db.RegisterMessage(GetCurSeqRsp)

GetNewSeqReq = _reflection.GeneratedProtocolMessageType('GetNewSeqReq', (_message.Message,), dict(
  DESCRIPTOR = _GETNEWSEQREQ,
  __module__ = 'seq_alloc_pb2'
  # @@protoc_insertion_point(class_scope:Proto.GetNewSeqReq)
  ))
_sym_db.RegisterMessage(GetNewSeqReq)

GetNewSeqRsp = _reflection.GeneratedProtocolMessageType('GetNewSeqRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETNEWSEQRSP,
  __module__ = 'seq_alloc_pb2'
  # @@protoc_insertion_point(class_scope:Proto.GetNewSeqRsp)
  ))
_sym_db.RegisterMessage(GetNewSeqRsp)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterRPCSeqAllocServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetCurSeq(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetNewSeq(self, request, context):
    raise NotImplementedError()
class EarlyAdopterRPCSeqAllocServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterRPCSeqAllocStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetCurSeq(self, request):
    raise NotImplementedError()
  GetCurSeq.async = None
  @abc.abstractmethod
  def GetNewSeq(self, request):
    raise NotImplementedError()
  GetNewSeq.async = None
def early_adopter_create_RPCSeqAlloc_server(servicer, port, private_key=None, certificate_chain=None):
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  method_service_descriptions = {
    "GetCurSeq": alpha_utilities.unary_unary_service_description(
      servicer.GetCurSeq,
      seq_alloc_pb2.GetCurSeqReq.FromString,
      seq_alloc_pb2.GetCurSeqRsp.SerializeToString,
    ),
    "GetNewSeq": alpha_utilities.unary_unary_service_description(
      servicer.GetNewSeq,
      seq_alloc_pb2.GetNewSeqReq.FromString,
      seq_alloc_pb2.GetNewSeqRsp.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("Proto.RPCSeqAlloc", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_RPCSeqAlloc_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  method_invocation_descriptions = {
    "GetCurSeq": alpha_utilities.unary_unary_invocation_description(
      seq_alloc_pb2.GetCurSeqReq.SerializeToString,
      seq_alloc_pb2.GetCurSeqRsp.FromString,
    ),
    "GetNewSeq": alpha_utilities.unary_unary_invocation_description(
      seq_alloc_pb2.GetNewSeqReq.SerializeToString,
      seq_alloc_pb2.GetNewSeqRsp.FromString,
    ),
  }
  return early_adopter_implementations.stub("Proto.RPCSeqAlloc", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaRPCSeqAllocServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetCurSeq(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetNewSeq(self, request, context):
    raise NotImplementedError()

class BetaRPCSeqAllocStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetCurSeq(self, request, timeout):
    raise NotImplementedError()
  GetCurSeq.future = None
  @abc.abstractmethod
  def GetNewSeq(self, request, timeout):
    raise NotImplementedError()
  GetNewSeq.future = None

def beta_create_RPCSeqAlloc_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  request_deserializers = {
    ('Proto.RPCSeqAlloc', 'GetCurSeq'): seq_alloc_pb2.GetCurSeqReq.FromString,
    ('Proto.RPCSeqAlloc', 'GetNewSeq'): seq_alloc_pb2.GetNewSeqReq.FromString,
  }
  response_serializers = {
    ('Proto.RPCSeqAlloc', 'GetCurSeq'): seq_alloc_pb2.GetCurSeqRsp.SerializeToString,
    ('Proto.RPCSeqAlloc', 'GetNewSeq'): seq_alloc_pb2.GetNewSeqRsp.SerializeToString,
  }
  method_implementations = {
    ('Proto.RPCSeqAlloc', 'GetCurSeq'): face_utilities.unary_unary_inline(servicer.GetCurSeq),
    ('Proto.RPCSeqAlloc', 'GetNewSeq'): face_utilities.unary_unary_inline(servicer.GetNewSeq),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_RPCSeqAlloc_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  import seq_alloc_pb2
  request_serializers = {
    ('Proto.RPCSeqAlloc', 'GetCurSeq'): seq_alloc_pb2.GetCurSeqReq.SerializeToString,
    ('Proto.RPCSeqAlloc', 'GetNewSeq'): seq_alloc_pb2.GetNewSeqReq.SerializeToString,
  }
  response_deserializers = {
    ('Proto.RPCSeqAlloc', 'GetCurSeq'): seq_alloc_pb2.GetCurSeqRsp.FromString,
    ('Proto.RPCSeqAlloc', 'GetNewSeq'): seq_alloc_pb2.GetNewSeqRsp.FromString,
  }
  cardinalities = {
    'GetCurSeq': cardinality.Cardinality.UNARY_UNARY,
    'GetNewSeq': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'Proto.RPCSeqAlloc', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
