# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: comment.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import header_pb2 as header__pb2
import base_pb2 as base__pb2
import const_pb2 as const__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='comment.proto',
  package='Proto',
  syntax='proto3',
  serialized_pb=b'\n\rcomment.proto\x12\x05Proto\x1a\x0cheader.proto\x1a\nbase.proto\x1a\x0b\x63onst.proto\"n\n\x13\x43ommentUserBaseInfo\x12\x0b\n\x03uin\x18\x01 \x01(\r\x12\x12\n\nfirst_name\x18\x02 \x01(\t\x12\x11\n\tlast_name\x18\x03 \x01(\t\x12\x11\n\treal_name\x18\x04 \x01(\t\x12\x10\n\x08head_url\x18\x05 \x01(\t\"\xff\x03\n\x0e\x43ommentContent\x12\x0c\n\x04type\x18\x01 \x01(\r\x12\x13\n\x0b\x63reate_time\x18\x02 \x01(\r\x12(\n\x04user\x18\n \x01(\x0b\x32\x1a.Proto.CommentUserBaseInfo\x12\x0f\n\x07\x63ontent\x18\x0b \x01(\t\x12\x1c\n\x06images\x18\x0c \x03(\x0b\x32\x0c.Proto.Image\x12\x0e\n\x06murmur\x18\r \x01(\t\x12\x17\n\x0frecommend_house\x18\x0e \x01(\x08\x12\x18\n\x10recommend_tenant\x18\x0f \x01(\x08\x12\x18\n\x10landlord_score_0\x18\x1f \x01(\r\x12\x18\n\x10landlord_score_1\x18  \x01(\r\x12\x18\n\x10landlord_score_2\x18! \x01(\r\x12\x18\n\x10landlord_score_3\x18\" \x01(\r\x12\x18\n\x10landlord_score_4\x18# \x01(\r\x12\x18\n\x10landlord_score_5\x18$ \x01(\r\x12\x18\n\x10landlord_score_6\x18% \x01(\r\x12\x18\n\x10landlord_score_7\x18& \x01(\r\x12\x16\n\x0etenant_score_1\x18\x34 \x01(\r\x12\x16\n\x0etenant_score_2\x18\x35 \x01(\r\x12\x16\n\x0etenant_score_3\x18\x36 \x01(\r\x12\x16\n\x0etenant_score_4\x18\x37 \x01(\r\"\xc5\x02\n\x0b\x43ommentInfo\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x12\n\ncomment_id\x18\x01 \x01(\x04\x12\x12\n\nbooking_id\x18\x02 \x01(\x04\x12\x10\n\x08house_id\x18\x03 \x01(\x04\x12\x14\n\x0clandlord_uin\x18\x04 \x01(\r\x12\x12\n\ntenant_uin\x18\x05 \x01(\r\x12 \n\x04\x66rom\x18\x06 \x01(\x0e\x32\x12.Proto.CommentFrom\x12*\n\x07visible\x18\x07 \x01(\x0e\x32\x19.Proto.CommentVisibleType\x12\x0e\n\x06status\x18\x0b \x01(\r\x12(\n\tby_tenant\x18\x0c \x01(\x0b\x32\x15.Proto.CommentContent\x12*\n\x0b\x62y_landlord\x18\r \x01(\x0b\x32\x15.Proto.CommentContent\"]\n\rCommentAddRsp\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03ret\x18\x01 \x01(\x05\x12\x0b\n\x03\x65rr\x18\x02 \x01(\t\x12\x12\n\ncomment_id\x18\x03 \x01(\x04\"[\n\x0eUserCommentReq\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03uin\x18\x01 \x01(\r\x12\x0b\n\x03num\x18\x03 \x01(\r\x12\x0f\n\x07last_id\x18\x04 \x01(\t\"a\n\x0fHouseCommentReq\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x10\n\x08house_id\x18\x01 \x01(\x04\x12\x0b\n\x03num\x18\x03 \x01(\r\x12\x0f\n\x07last_id\x18\x04 \x01(\t\"\x81\x01\n\x0e\x43ommentListRsp\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03ret\x18\x01 \x01(\x05\x12\x0b\n\x03\x65rr\x18\x02 \x01(\t\x12$\n\x08\x63omments\x18\x03 \x03(\x0b\x32\x12.Proto.CommentInfo\x12\x0f\n\x07last_id\x18\x04 \x01(\t\"`\n\x16PublishThirdCommentReq\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x10\n\x08house_id\x18\x01 \x01(\x04\x12\x14\n\x0c\x63omment_list\x18\x02 \x03(\x03\"R\n\x16PublishThirdCommentRsp\x12\x1e\n\x06header\x18\xf4\x03 \x01(\x0b\x32\r.Proto.Header\x12\x0b\n\x03ret\x18\x01 \x01(\x05\x12\x0b\n\x03\x65rr\x18\x02 \x01(\t*\xbb\x01\n\x0b\x43ommentFrom\x12\x16\n\x12\x43ommentFromDefault\x10\x00\x12\x14\n\x10\x43ommentFrom11Bnb\x10\x01\x12\x12\n\x0e\x43ommentFromPig\x10\x02\x12\x12\n\x0e\x43ommentFromAnt\x10\x03\x12\x12\n\x0e\x43ommentFromYTX\x10\x04\x12\x14\n\x10\x43ommentFromTuJia\x10\x05\x12\x15\n\x11\x43ommentFromMuNiao\x10\x06\x12\x15\n\x11\x43ommentFromAirBnb\x10\x07\x32\x91\x03\n\nRpcComment\x12(\n\x04\x45\x63ho\x12\x0e.Proto.EchoReq\x1a\x0e.Proto.EchoRsp\"\x00\x12\x38\n\nAddComment\x12\x12.Proto.CommentInfo\x1a\x14.Proto.CommentAddRsp\"\x00\x12@\n\x0eGetUserComment\x12\x15.Proto.UserCommentReq\x1a\x15.Proto.CommentListRsp\"\x00\x12\x42\n\x0fGetHouseComment\x12\x16.Proto.HouseCommentReq\x1a\x15.Proto.CommentListRsp\"\x00\x12\x42\n\x0fGetThirdComment\x12\x16.Proto.HouseCommentReq\x1a\x15.Proto.CommentListRsp\"\x00\x12U\n\x13PublishThirdComment\x12\x1d.Proto.PublishThirdCommentReq\x1a\x1d.Proto.PublishThirdCommentRsp\"\x00\x62\x06proto3'
  ,
  dependencies=[header__pb2.DESCRIPTOR,base__pb2.DESCRIPTOR,const__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_COMMENTFROM = _descriptor.EnumDescriptor(
  name='CommentFrom',
  full_name='Proto.CommentFrom',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CommentFromDefault', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFrom11Bnb', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromPig', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromAnt', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromYTX', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromTuJia', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromMuNiao', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CommentFromAirBnb', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1619,
  serialized_end=1806,
)
_sym_db.RegisterEnumDescriptor(_COMMENTFROM)

CommentFrom = enum_type_wrapper.EnumTypeWrapper(_COMMENTFROM)
CommentFromDefault = 0
CommentFrom11Bnb = 1
CommentFromPig = 2
CommentFromAnt = 3
CommentFromYTX = 4
CommentFromTuJia = 5
CommentFromMuNiao = 6
CommentFromAirBnb = 7



_COMMENTUSERBASEINFO = _descriptor.Descriptor(
  name='CommentUserBaseInfo',
  full_name='Proto.CommentUserBaseInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.CommentUserBaseInfo.uin', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_name', full_name='Proto.CommentUserBaseInfo.first_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='Proto.CommentUserBaseInfo.last_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='real_name', full_name='Proto.CommentUserBaseInfo.real_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='head_url', full_name='Proto.CommentUserBaseInfo.head_url', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=173,
)


_COMMENTCONTENT = _descriptor.Descriptor(
  name='CommentContent',
  full_name='Proto.CommentContent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Proto.CommentContent.type', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='create_time', full_name='Proto.CommentContent.create_time', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='Proto.CommentContent.user', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content', full_name='Proto.CommentContent.content', index=3,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='images', full_name='Proto.CommentContent.images', index=4,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='murmur', full_name='Proto.CommentContent.murmur', index=5,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recommend_house', full_name='Proto.CommentContent.recommend_house', index=6,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recommend_tenant', full_name='Proto.CommentContent.recommend_tenant', index=7,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_0', full_name='Proto.CommentContent.landlord_score_0', index=8,
      number=31, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_1', full_name='Proto.CommentContent.landlord_score_1', index=9,
      number=32, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_2', full_name='Proto.CommentContent.landlord_score_2', index=10,
      number=33, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_3', full_name='Proto.CommentContent.landlord_score_3', index=11,
      number=34, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_4', full_name='Proto.CommentContent.landlord_score_4', index=12,
      number=35, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_5', full_name='Proto.CommentContent.landlord_score_5', index=13,
      number=36, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_6', full_name='Proto.CommentContent.landlord_score_6', index=14,
      number=37, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_score_7', full_name='Proto.CommentContent.landlord_score_7', index=15,
      number=38, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant_score_1', full_name='Proto.CommentContent.tenant_score_1', index=16,
      number=52, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant_score_2', full_name='Proto.CommentContent.tenant_score_2', index=17,
      number=53, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant_score_3', full_name='Proto.CommentContent.tenant_score_3', index=18,
      number=54, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant_score_4', full_name='Proto.CommentContent.tenant_score_4', index=19,
      number=55, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=687,
)


_COMMENTINFO = _descriptor.Descriptor(
  name='CommentInfo',
  full_name='Proto.CommentInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.CommentInfo.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='comment_id', full_name='Proto.CommentInfo.comment_id', index=1,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='booking_id', full_name='Proto.CommentInfo.booking_id', index=2,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='house_id', full_name='Proto.CommentInfo.house_id', index=3,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='landlord_uin', full_name='Proto.CommentInfo.landlord_uin', index=4,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant_uin', full_name='Proto.CommentInfo.tenant_uin', index=5,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='from', full_name='Proto.CommentInfo.from', index=6,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='visible', full_name='Proto.CommentInfo.visible', index=7,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Proto.CommentInfo.status', index=8,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='by_tenant', full_name='Proto.CommentInfo.by_tenant', index=9,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='by_landlord', full_name='Proto.CommentInfo.by_landlord', index=10,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=690,
  serialized_end=1015,
)


_COMMENTADDRSP = _descriptor.Descriptor(
  name='CommentAddRsp',
  full_name='Proto.CommentAddRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.CommentAddRsp.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ret', full_name='Proto.CommentAddRsp.ret', index=1,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='Proto.CommentAddRsp.err', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='comment_id', full_name='Proto.CommentAddRsp.comment_id', index=3,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1017,
  serialized_end=1110,
)


_USERCOMMENTREQ = _descriptor.Descriptor(
  name='UserCommentReq',
  full_name='Proto.UserCommentReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.UserCommentReq.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uin', full_name='Proto.UserCommentReq.uin', index=1,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num', full_name='Proto.UserCommentReq.num', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_id', full_name='Proto.UserCommentReq.last_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1112,
  serialized_end=1203,
)


_HOUSECOMMENTREQ = _descriptor.Descriptor(
  name='HouseCommentReq',
  full_name='Proto.HouseCommentReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.HouseCommentReq.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='house_id', full_name='Proto.HouseCommentReq.house_id', index=1,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num', full_name='Proto.HouseCommentReq.num', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_id', full_name='Proto.HouseCommentReq.last_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1205,
  serialized_end=1302,
)


_COMMENTLISTRSP = _descriptor.Descriptor(
  name='CommentListRsp',
  full_name='Proto.CommentListRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.CommentListRsp.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ret', full_name='Proto.CommentListRsp.ret', index=1,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='Proto.CommentListRsp.err', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='comments', full_name='Proto.CommentListRsp.comments', index=3,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_id', full_name='Proto.CommentListRsp.last_id', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1305,
  serialized_end=1434,
)


_PUBLISHTHIRDCOMMENTREQ = _descriptor.Descriptor(
  name='PublishThirdCommentReq',
  full_name='Proto.PublishThirdCommentReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.PublishThirdCommentReq.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='house_id', full_name='Proto.PublishThirdCommentReq.house_id', index=1,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='comment_list', full_name='Proto.PublishThirdCommentReq.comment_list', index=2,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1436,
  serialized_end=1532,
)


_PUBLISHTHIRDCOMMENTRSP = _descriptor.Descriptor(
  name='PublishThirdCommentRsp',
  full_name='Proto.PublishThirdCommentRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Proto.PublishThirdCommentRsp.header', index=0,
      number=500, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ret', full_name='Proto.PublishThirdCommentRsp.ret', index=1,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='Proto.PublishThirdCommentRsp.err', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1534,
  serialized_end=1616,
)

_COMMENTCONTENT.fields_by_name['user'].message_type = _COMMENTUSERBASEINFO
_COMMENTCONTENT.fields_by_name['images'].message_type = base__pb2._IMAGE
_COMMENTINFO.fields_by_name['header'].message_type = header__pb2._HEADER
_COMMENTINFO.fields_by_name['from'].enum_type = _COMMENTFROM
_COMMENTINFO.fields_by_name['visible'].enum_type = const__pb2._COMMENTVISIBLETYPE
_COMMENTINFO.fields_by_name['by_tenant'].message_type = _COMMENTCONTENT
_COMMENTINFO.fields_by_name['by_landlord'].message_type = _COMMENTCONTENT
_COMMENTADDRSP.fields_by_name['header'].message_type = header__pb2._HEADER
_USERCOMMENTREQ.fields_by_name['header'].message_type = header__pb2._HEADER
_HOUSECOMMENTREQ.fields_by_name['header'].message_type = header__pb2._HEADER
_COMMENTLISTRSP.fields_by_name['header'].message_type = header__pb2._HEADER
_COMMENTLISTRSP.fields_by_name['comments'].message_type = _COMMENTINFO
_PUBLISHTHIRDCOMMENTREQ.fields_by_name['header'].message_type = header__pb2._HEADER
_PUBLISHTHIRDCOMMENTRSP.fields_by_name['header'].message_type = header__pb2._HEADER
DESCRIPTOR.message_types_by_name['CommentUserBaseInfo'] = _COMMENTUSERBASEINFO
DESCRIPTOR.message_types_by_name['CommentContent'] = _COMMENTCONTENT
DESCRIPTOR.message_types_by_name['CommentInfo'] = _COMMENTINFO
DESCRIPTOR.message_types_by_name['CommentAddRsp'] = _COMMENTADDRSP
DESCRIPTOR.message_types_by_name['UserCommentReq'] = _USERCOMMENTREQ
DESCRIPTOR.message_types_by_name['HouseCommentReq'] = _HOUSECOMMENTREQ
DESCRIPTOR.message_types_by_name['CommentListRsp'] = _COMMENTLISTRSP
DESCRIPTOR.message_types_by_name['PublishThirdCommentReq'] = _PUBLISHTHIRDCOMMENTREQ
DESCRIPTOR.message_types_by_name['PublishThirdCommentRsp'] = _PUBLISHTHIRDCOMMENTRSP
DESCRIPTOR.enum_types_by_name['CommentFrom'] = _COMMENTFROM

CommentUserBaseInfo = _reflection.GeneratedProtocolMessageType('CommentUserBaseInfo', (_message.Message,), dict(
  DESCRIPTOR = _COMMENTUSERBASEINFO,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.CommentUserBaseInfo)
  ))
_sym_db.RegisterMessage(CommentUserBaseInfo)

CommentContent = _reflection.GeneratedProtocolMessageType('CommentContent', (_message.Message,), dict(
  DESCRIPTOR = _COMMENTCONTENT,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.CommentContent)
  ))
_sym_db.RegisterMessage(CommentContent)

CommentInfo = _reflection.GeneratedProtocolMessageType('CommentInfo', (_message.Message,), dict(
  DESCRIPTOR = _COMMENTINFO,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.CommentInfo)
  ))
_sym_db.RegisterMessage(CommentInfo)

CommentAddRsp = _reflection.GeneratedProtocolMessageType('CommentAddRsp', (_message.Message,), dict(
  DESCRIPTOR = _COMMENTADDRSP,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.CommentAddRsp)
  ))
_sym_db.RegisterMessage(CommentAddRsp)

UserCommentReq = _reflection.GeneratedProtocolMessageType('UserCommentReq', (_message.Message,), dict(
  DESCRIPTOR = _USERCOMMENTREQ,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.UserCommentReq)
  ))
_sym_db.RegisterMessage(UserCommentReq)

HouseCommentReq = _reflection.GeneratedProtocolMessageType('HouseCommentReq', (_message.Message,), dict(
  DESCRIPTOR = _HOUSECOMMENTREQ,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.HouseCommentReq)
  ))
_sym_db.RegisterMessage(HouseCommentReq)

CommentListRsp = _reflection.GeneratedProtocolMessageType('CommentListRsp', (_message.Message,), dict(
  DESCRIPTOR = _COMMENTLISTRSP,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.CommentListRsp)
  ))
_sym_db.RegisterMessage(CommentListRsp)

PublishThirdCommentReq = _reflection.GeneratedProtocolMessageType('PublishThirdCommentReq', (_message.Message,), dict(
  DESCRIPTOR = _PUBLISHTHIRDCOMMENTREQ,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.PublishThirdCommentReq)
  ))
_sym_db.RegisterMessage(PublishThirdCommentReq)

PublishThirdCommentRsp = _reflection.GeneratedProtocolMessageType('PublishThirdCommentRsp', (_message.Message,), dict(
  DESCRIPTOR = _PUBLISHTHIRDCOMMENTRSP,
  __module__ = 'comment_pb2'
  # @@protoc_insertion_point(class_scope:Proto.PublishThirdCommentRsp)
  ))
_sym_db.RegisterMessage(PublishThirdCommentRsp)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterRpcCommentServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Echo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetUserComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetHouseComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetThirdComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PublishThirdComment(self, request, context):
    raise NotImplementedError()
class EarlyAdopterRpcCommentServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterRpcCommentStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Echo(self, request):
    raise NotImplementedError()
  Echo.async = None
  @abc.abstractmethod
  def AddComment(self, request):
    raise NotImplementedError()
  AddComment.async = None
  @abc.abstractmethod
  def GetUserComment(self, request):
    raise NotImplementedError()
  GetUserComment.async = None
  @abc.abstractmethod
  def GetHouseComment(self, request):
    raise NotImplementedError()
  GetHouseComment.async = None
  @abc.abstractmethod
  def GetThirdComment(self, request):
    raise NotImplementedError()
  GetThirdComment.async = None
  @abc.abstractmethod
  def PublishThirdComment(self, request):
    raise NotImplementedError()
  PublishThirdComment.async = None
def early_adopter_create_RpcComment_server(servicer, port, private_key=None, certificate_chain=None):
  import base_pb2
  import base_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  method_service_descriptions = {
    "AddComment": alpha_utilities.unary_unary_service_description(
      servicer.AddComment,
      comment_pb2.CommentInfo.FromString,
      comment_pb2.CommentAddRsp.SerializeToString,
    ),
    "Echo": alpha_utilities.unary_unary_service_description(
      servicer.Echo,
      base_pb2.EchoReq.FromString,
      base_pb2.EchoRsp.SerializeToString,
    ),
    "GetHouseComment": alpha_utilities.unary_unary_service_description(
      servicer.GetHouseComment,
      comment_pb2.HouseCommentReq.FromString,
      comment_pb2.CommentListRsp.SerializeToString,
    ),
    "GetThirdComment": alpha_utilities.unary_unary_service_description(
      servicer.GetThirdComment,
      comment_pb2.HouseCommentReq.FromString,
      comment_pb2.CommentListRsp.SerializeToString,
    ),
    "GetUserComment": alpha_utilities.unary_unary_service_description(
      servicer.GetUserComment,
      comment_pb2.UserCommentReq.FromString,
      comment_pb2.CommentListRsp.SerializeToString,
    ),
    "PublishThirdComment": alpha_utilities.unary_unary_service_description(
      servicer.PublishThirdComment,
      comment_pb2.PublishThirdCommentReq.FromString,
      comment_pb2.PublishThirdCommentRsp.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("Proto.RpcComment", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_RpcComment_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import base_pb2
  import base_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  method_invocation_descriptions = {
    "AddComment": alpha_utilities.unary_unary_invocation_description(
      comment_pb2.CommentInfo.SerializeToString,
      comment_pb2.CommentAddRsp.FromString,
    ),
    "Echo": alpha_utilities.unary_unary_invocation_description(
      base_pb2.EchoReq.SerializeToString,
      base_pb2.EchoRsp.FromString,
    ),
    "GetHouseComment": alpha_utilities.unary_unary_invocation_description(
      comment_pb2.HouseCommentReq.SerializeToString,
      comment_pb2.CommentListRsp.FromString,
    ),
    "GetThirdComment": alpha_utilities.unary_unary_invocation_description(
      comment_pb2.HouseCommentReq.SerializeToString,
      comment_pb2.CommentListRsp.FromString,
    ),
    "GetUserComment": alpha_utilities.unary_unary_invocation_description(
      comment_pb2.UserCommentReq.SerializeToString,
      comment_pb2.CommentListRsp.FromString,
    ),
    "PublishThirdComment": alpha_utilities.unary_unary_invocation_description(
      comment_pb2.PublishThirdCommentReq.SerializeToString,
      comment_pb2.PublishThirdCommentRsp.FromString,
    ),
  }
  return early_adopter_implementations.stub("Proto.RpcComment", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaRpcCommentServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Echo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetUserComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetHouseComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetThirdComment(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PublishThirdComment(self, request, context):
    raise NotImplementedError()

class BetaRpcCommentStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Echo(self, request, timeout):
    raise NotImplementedError()
  Echo.future = None
  @abc.abstractmethod
  def AddComment(self, request, timeout):
    raise NotImplementedError()
  AddComment.future = None
  @abc.abstractmethod
  def GetUserComment(self, request, timeout):
    raise NotImplementedError()
  GetUserComment.future = None
  @abc.abstractmethod
  def GetHouseComment(self, request, timeout):
    raise NotImplementedError()
  GetHouseComment.future = None
  @abc.abstractmethod
  def GetThirdComment(self, request, timeout):
    raise NotImplementedError()
  GetThirdComment.future = None
  @abc.abstractmethod
  def PublishThirdComment(self, request, timeout):
    raise NotImplementedError()
  PublishThirdComment.future = None

def beta_create_RpcComment_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import base_pb2
  import base_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  request_deserializers = {
    ('Proto.RpcComment', 'AddComment'): comment_pb2.CommentInfo.FromString,
    ('Proto.RpcComment', 'Echo'): base_pb2.EchoReq.FromString,
    ('Proto.RpcComment', 'GetHouseComment'): comment_pb2.HouseCommentReq.FromString,
    ('Proto.RpcComment', 'GetThirdComment'): comment_pb2.HouseCommentReq.FromString,
    ('Proto.RpcComment', 'GetUserComment'): comment_pb2.UserCommentReq.FromString,
    ('Proto.RpcComment', 'PublishThirdComment'): comment_pb2.PublishThirdCommentReq.FromString,
  }
  response_serializers = {
    ('Proto.RpcComment', 'AddComment'): comment_pb2.CommentAddRsp.SerializeToString,
    ('Proto.RpcComment', 'Echo'): base_pb2.EchoRsp.SerializeToString,
    ('Proto.RpcComment', 'GetHouseComment'): comment_pb2.CommentListRsp.SerializeToString,
    ('Proto.RpcComment', 'GetThirdComment'): comment_pb2.CommentListRsp.SerializeToString,
    ('Proto.RpcComment', 'GetUserComment'): comment_pb2.CommentListRsp.SerializeToString,
    ('Proto.RpcComment', 'PublishThirdComment'): comment_pb2.PublishThirdCommentRsp.SerializeToString,
  }
  method_implementations = {
    ('Proto.RpcComment', 'AddComment'): face_utilities.unary_unary_inline(servicer.AddComment),
    ('Proto.RpcComment', 'Echo'): face_utilities.unary_unary_inline(servicer.Echo),
    ('Proto.RpcComment', 'GetHouseComment'): face_utilities.unary_unary_inline(servicer.GetHouseComment),
    ('Proto.RpcComment', 'GetThirdComment'): face_utilities.unary_unary_inline(servicer.GetThirdComment),
    ('Proto.RpcComment', 'GetUserComment'): face_utilities.unary_unary_inline(servicer.GetUserComment),
    ('Proto.RpcComment', 'PublishThirdComment'): face_utilities.unary_unary_inline(servicer.PublishThirdComment),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_RpcComment_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import base_pb2
  import base_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  import comment_pb2
  request_serializers = {
    ('Proto.RpcComment', 'AddComment'): comment_pb2.CommentInfo.SerializeToString,
    ('Proto.RpcComment', 'Echo'): base_pb2.EchoReq.SerializeToString,
    ('Proto.RpcComment', 'GetHouseComment'): comment_pb2.HouseCommentReq.SerializeToString,
    ('Proto.RpcComment', 'GetThirdComment'): comment_pb2.HouseCommentReq.SerializeToString,
    ('Proto.RpcComment', 'GetUserComment'): comment_pb2.UserCommentReq.SerializeToString,
    ('Proto.RpcComment', 'PublishThirdComment'): comment_pb2.PublishThirdCommentReq.SerializeToString,
  }
  response_deserializers = {
    ('Proto.RpcComment', 'AddComment'): comment_pb2.CommentAddRsp.FromString,
    ('Proto.RpcComment', 'Echo'): base_pb2.EchoRsp.FromString,
    ('Proto.RpcComment', 'GetHouseComment'): comment_pb2.CommentListRsp.FromString,
    ('Proto.RpcComment', 'GetThirdComment'): comment_pb2.CommentListRsp.FromString,
    ('Proto.RpcComment', 'GetUserComment'): comment_pb2.CommentListRsp.FromString,
    ('Proto.RpcComment', 'PublishThirdComment'): comment_pb2.PublishThirdCommentRsp.FromString,
  }
  cardinalities = {
    'AddComment': cardinality.Cardinality.UNARY_UNARY,
    'Echo': cardinality.Cardinality.UNARY_UNARY,
    'GetHouseComment': cardinality.Cardinality.UNARY_UNARY,
    'GetThirdComment': cardinality.Cardinality.UNARY_UNARY,
    'GetUserComment': cardinality.Cardinality.UNARY_UNARY,
    'PublishThirdComment': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'Proto.RpcComment', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
